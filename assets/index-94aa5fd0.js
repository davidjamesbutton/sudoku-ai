(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();class c{constructor(){this.board=Array(9).fill(null).map(()=>Array(9).fill(0))}generate(){return this.fillBoard(0,0),this.board}fillBoard(t,e){if(e===9&&(t++,e=0),t===9)return!0;if(this.board[t][e]!==0)return this.fillBoard(t,e+1);const i=this.shuffle([1,2,3,4,5,6,7,8,9]);for(const s of i)if(this.isValid(t,e,s)){if(this.board[t][e]=s,this.fillBoard(t,e+1))return!0;this.board[t][e]=0}return!1}isValid(t,e,i){for(let n=0;n<9;n++)if(this.board[t][n]===i)return!1;for(let n=0;n<9;n++)if(this.board[n][e]===i)return!1;const s=Math.floor(t/3)*3,o=Math.floor(e/3)*3;for(let n=0;n<3;n++)for(let l=0;l<3;l++)if(this.board[s+n][o+l]===i)return!1;return!0}shuffle(t){for(let e=t.length-1;e>0;e--){const i=Math.floor(Math.random()*(e+1));[t[e],t[i]]=[t[i],t[e]]}return t}}class h{constructor(){this.board=[],this.solution=[],this.cellSize=50,this.selectedCell=null,this.initialBoard=[],this.title=document.createElement("h1"),this.title.textContent="Sudoku AI",document.body.prepend(this.title),this.canvas=document.createElement("canvas"),this.canvas.width=450,this.canvas.height=450,document.body.appendChild(this.canvas);const t=this.canvas.getContext("2d");if(!t)throw new Error("Unable to get 2D context");this.ctx=t,this.createButtons(),this.addEventListeners(),this.newGame()}createButtons(){const t=document.createElement("div");t.style.display="flex",t.style.justifyContent="center",t.style.gap="10px",t.style.marginTop="20px";const e=this.createStyledButton("New Game",()=>this.newGame()),i=this.createStyledButton("Clear Game",()=>this.clearGame()),s=this.createStyledButton("Solve Game",()=>this.solveGame());t.appendChild(e),t.appendChild(i),t.appendChild(s),document.body.appendChild(t)}createStyledButton(t,e){const i=document.createElement("button");return i.textContent=t,i.addEventListener("click",e),i.style.padding="10px 20px",i.style.fontSize="16px",i.style.cursor="pointer",i.style.backgroundColor="#4CAF50",i.style.color="white",i.style.border="none",i.style.borderRadius="5px",i.style.transition="background-color 0.3s",i.addEventListener("mouseover",()=>{i.style.backgroundColor="#45a049"}),i.addEventListener("mouseout",()=>{i.style.backgroundColor="#4CAF50"}),i}addEventListeners(){this.canvas.addEventListener("click",this.handleClick.bind(this)),document.addEventListener("keydown",this.handleKeyPress.bind(this))}newGame(){const t=new c;this.solution=t.generate(),this.board=this.solution.map(e=>e.map(i=>Math.random()<.5?i:0)),this.initialBoard=this.board.map(e=>[...e]),this.selectedCell=null,this.render()}render(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawGrid(),this.drawHighlight(),this.drawNumbers()}drawHighlight(){if(this.selectedCell){const{row:t,col:e}=this.selectedCell;this.ctx.fillStyle="rgba(173, 216, 230, 0.5)",this.ctx.fillRect(e*this.cellSize,t*this.cellSize,this.cellSize,this.cellSize)}}drawGrid(){this.ctx.strokeStyle="#000",this.ctx.lineWidth=1;for(let t=0;t<=9;t++){const e=t*this.cellSize;this.ctx.beginPath(),this.ctx.moveTo(e,0),this.ctx.lineTo(e,this.canvas.height),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(0,e),this.ctx.lineTo(this.canvas.width,e),this.ctx.stroke(),t%3===0&&(this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.moveTo(e,0),this.ctx.lineTo(e,this.canvas.height),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(0,e),this.ctx.lineTo(this.canvas.width,e),this.ctx.stroke(),this.ctx.lineWidth=1)}}drawNumbers(){this.ctx.font="24px Arial",this.ctx.textAlign="center",this.ctx.textBaseline="middle";for(let t=0;t<9;t++)for(let e=0;e<9;e++){const i=this.board[t][e];if(i!==0){const s=(e+.5)*this.cellSize,o=(t+.5)*this.cellSize;this.initialBoard[t][e]===i?this.ctx.fillStyle="black":this.solution[t][e]===i?this.ctx.fillStyle="green":this.ctx.fillStyle="red",this.ctx.fillText(i.toString(),s,o)}}}handleClick(t){const e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,s=t.clientY-e.top,o=Math.floor(i/this.cellSize),n=Math.floor(s/this.cellSize);n>=0&&n<9&&o>=0&&o<9&&(this.selectedCell&&this.selectedCell.row===n&&this.selectedCell.col===o?this.selectedCell=null:this.selectedCell={row:n,col:o},this.render())}handleKeyPress(t){if(this.selectedCell){const{row:e,col:i}=this.selectedCell;if(this.initialBoard[e][i]===0)if(t.key>="1"&&t.key<="9"){const s=parseInt(t.key);this.board[e][i]=s,this.render()}else(t.key==="Backspace"||t.key==="Delete")&&(this.board[e][i]=0,this.render())}}centerContent(){const t=window.innerHeight,e=this.title.offsetHeight+this.canvas.height+100,i=Math.max(0,(t-e)/2);this.title.style.marginTop=`${i}px`}solveGame(){for(let t=0;t<9;t++)for(let e=0;e<9;e++)this.board[t][e]===0&&(this.board[t][e]=this.solution[t][e]);this.render()}clearGame(){for(let t=0;t<9;t++)for(let e=0;e<9;e++)this.initialBoard[t][e]===0&&(this.board[t][e]=0);this.render()}}function a(){new c,new h,console.log("Sudoku game initialized")}document.addEventListener("DOMContentLoaded",a);
